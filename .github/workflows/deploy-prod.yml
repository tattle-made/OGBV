name: Release
on:
  push: 
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      annotation-ui: ${{ steps.filter.outputs.annotation-ui }}
      uli-website: ${{ steps.filter.outputs.uli-website}}
      ogbv-ml-rest: ${{ steps.filter.outputs.ogbv-ml-rest }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          filters: |
            annotation-ui:
                - 'annotators/backend/**/*'
                - 'annotators/annotation-ui/**/*'
            uli-website:
                - 'uli-website/**/*'
            ogbv-ml-rest:
                - 'ogbv-ml-rest/**/*'

  annotation-ui:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.annotation-ui == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "setting variables"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          cd annotators/annotation-ui
          npm install --force
          npm run build
          
      - name: Publish to Docker
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          username: tattletech
          password: ${{ secrets.DOCKER_PASSWORD }}
          name: tattletech/ogbv_annotator
          tags: ${{ steps.vars.outputs.sha_short }}
          workdir: annotators/backend/

      - name: deploy to cluster
        uses: steebchen/kubectl@v2.0.0
        with: # defaults to latest kubectl binary version
          config: ${{ secrets.PROD_KUBE_CONFIG_DATA }}
          command: set image --record deployment/annotation-ui annotation-ui=tattletech/ogbv_annotator:${{ steps.vars.outputs.sha_short }}
      - name: verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.PROD_KUBE_CONFIG_DATA }}
          version: v1.21.0 # specify kubectl binary version explicitly
          command: rollout status deployment/annotation-ui

  uli-website:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.uli-website == 'true' }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    - name: Install Packages
      run: |
        pwd
        cd uli-website 
        pwd
        ls
        npm install 
        npm run build
        npm run deploy

    - name: Notify on Slack
      uses: rtCamp/action-slack-notify@v2.0.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_MESSAGE: 'Deployed uli-website to production environment'
        SLACK_TITLE: 'deploy-production workflow complete'
        SLACK_COLOR: '#020637'
        SLACK_ICON: https://tattle-media.s3.amazonaws.com/monogram-dark.svg

  ogbv-ml-rest:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.ogbv-ml-rest == 'true' }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "setting variables"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"  
      
      - name: Build and Push to Docker
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          username: tattletech
          password: ${{ secrets.DOCKER_PASSWORD }}
          name: tattletech/ogbv_annotator
          tags: ${{ steps.vars.outputs.sha_short }}
          workdir: ogbv-ml-rest
          
          
        

